"""
Django settings for taosPro project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os.path
from pathlib import Path

## 数据分析配置
INF = 1000
MYSQL_CONFIG = {
    'host': '192.168.101.144',
    'username': 'root',
    'password': 'wkfl.777',
    'port': 3306
}
INTER_DIR = {"健康": [[(-1.8, 1.8), (-1.8, 1.8), (-1.1, 1.1), (-1.1, 1.1), (-1.5, 2.9)],
                      [(0, 2), (0, 2), (0, 1.5), (0, 1.5), (0, 0.5)],
                      [(0, 3.2), (0, 3.2), (0, 3.2), (0, 3.2), (0, 0.5)]],  # 积分电流，同步震动半径，同步电流的健康区间
             "预警": [[(1.8, INF), (1.8, INF), (1.8, INF), (1.8, INF), (2.9, INF)],
                      [(2.0, 2.9), (2.0, 2.9), (1.5, 2.9), (1.5, 2.9), (0.5, 2.9)],
                      [(3.2, 4), (3.2, 4), (3.2, 4), (3.2, 4), (0.5, 1)]],
             # 积分电流，同步震动半径，同步电流的预警区间
             "故障": [[(3.2, INF), (3.2, INF), (3.2, INF), (3.2, INF), (3.2, INF)],
                      [(2.9, INF), (2.9, INF), (2.9, INF), (2.9, INF), (2.9, INF)],
                      [(4, INF), (4, INF), (4, INF), (4, INF), (1, INF)]]}  # 积分电流，同步震动半径，同步电流的故障区间

# 统计分析历史数据
# TODO:修改状态与名称
STATUS = ['健康', '预警', '故障']
TAGS = ['积分电流', '震动半径', '同步电流']

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-a1r5fwn#6wf6mwkwdgn*h*cp9xo-5dpi90ta2w%2r(vrty)u%s"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '192.168.102.31', '192.168.102.75']

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1"
    }
}

# redis配置
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379, 1)],  # Redis服务器地址和端口
        },
    },
}
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    'mqttserver',
    "showcenter.apps.ShowcenterConfig",
    "taos_capture.apps.TaosCaptureConfig",
    'channels',
    "corsheaders",
    "data_transport",

]
# Celery 设置
CELERY_BROKER_URL = 'redis://localhost:6379/1'  # Redis 地址
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/2'  # 存储任务结果的 Redis 地址
CELERY_RESULT_EXPIRES = 10 # 存储任务结果的过期时间
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True
CELERY_TASK_PUBLISH_RETRY_POLICY = {
    'max_retries': 2,
    'interval_start': 0.01,  # 10ms首次重试
    'interval_step': 0.03     # 指数退火
}
CELERY_BEAT_SCHEDULE = {
    'run-every-15-seconds': {
        'task': 'taosPro.periodic_task',
        'schedule': 10.0,
    }
}

# 可选：Celery的时区设置
CELERY_TIMEZONE = 'Asia/Shanghai'
# CELERY_ALWAYS_EAGER = True
# 控制台logger设置
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "level": "INFO",
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": "INFO",
        },
        "showcenter": {  # 为你的 app 配置单独的日志记录器
            "handlers": ["console"],
            "level": "INFO",
        },
    },
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.common.CommonMiddleware",
    # "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",

]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOWD_ORIGINS = [
    'http://192.168.102.31:5173',
]

ROOT_URLCONF = "taosPro.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates', ]
        ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "taosPro.wsgi.application"
ASGI_APPLICATION = "taosPro.routing.application"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    # "default": {
    #     "ENGINE": "django.db.backends.sqlite3",
    #     "NAME": BASE_DIR / "db.sqlite3",
    # },
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # 或其他数据库引擎
        'USER': 'root',
        'PASSWORD': 'ccn020125.',
        'HOST': 'localhost',
        'PORT': '3306',
        'CONN_MAX_AGE': None,  # 设置连接的最大存活时间为3600秒（1小时）
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
